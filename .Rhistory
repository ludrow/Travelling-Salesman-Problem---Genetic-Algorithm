cities = read.csv("data/cities.csv", header = TRUE, sep=",")
head(cities)
cities = read.csv("data/cities.csv", header = TRUE, sep=",")
getwd()
setwd('E:\Travelling-Salesman-Problem---Genetic-Algorithm')
setwd('E:/Travelling-Salesman-Problem---Genetic-Algorithm')
cities = read.csv("data/cities.csv", header = TRUE, sep=",")
head(cities)
totalDistance = function(visitedCities, distances=cities) {
visitedCities = c(visitedCities, visitedCities[1])
route = embed(visitedCities, 2)[, 2:1]
distancesSum = sum(distances[route])
return(distancesSum)
}
View(cities)
totalDistance(['Barcelona', 'Dublin', 'London'])
totalDistance(c('Barcelona', 'Dublin', 'London'))
permu(bestResults, totalDistance())
permu <- function(perm, fun, current=NULL){
for(i in 1: length(perm)){
fix <- c(current, perm[i]) # calculated elements; fix at this point
rest <- perm[-i] # elements yet to permutate
#Call callback.
if(!length(rest)){
result <- fun(fix)
if(result<bestResult){
assign("bestResult", result, envir = .GlobalEnv)
print(bestResult)
}
}
if(length(rest)){
result <- permu(rest, fun, fix)
}
}
}
bestResult <- 99999
permu(bestResults, totalDistance())
permu(bestResults, totalDistance())
permu(bestResult, totalDistance())
permu(bestResult, totalDistance(cities))
permu(bestResult, totalDistance(cities))
head(cities)
head(cities[1])
head(cities$1)
head(cities$Barcelona)
head(cities$names)
type(cities)
typeof(cities)
cities[0]
names(cities)
permu(bestResult, totalDistance(names(cities)))
as.vector(names(cities))
typeof(names(cities))
typeof(to.vector(names(cities)))
typeof(as.vector(names(cities)))
permu(bestResult, totalDistance(name(cities)))
permu(bestResult, totalDistance(names(cities)))
totalDistance(names(cities))
head(cities)
typeof(cities)
View(cities)
as.vector(names(cities))
cites.names <-as.vector(names(cities))
as.vector(names(cities))
cites.names
totalDistance(cites.names)
c(cites.names)
totalDistance(c(cites.names))
totalDistance(c(cites.names[1],cites.names[2]))
totalDistance(c(cites.names[1],cites.names[2], cites.names[3]))
permu
premu(1000, totalDistance)
permu(1000, totalDistance)
permu(1000, totalDistance(cites.names))
permu('Barcelona', totalDistance)
permu('Barcelona', totalDistance)
permu('Barcelona', totalDistance)
permu('B', totalDistance)
permu('Warsaw', totalDistance)
permu(c('Warsaw', 'Barcelona'), totalDistance)
permu(cites.names, totalDistance)
cites.names
length(cites.names)
permu(c('Warsaw', 'Barcelona'), totalDistance)
a =  permu(c('Warsaw', 'Barcelona'), totalDistance)
a
a =  permu(c('Warsaw', 'Barcelona'), totalDistance)
a
permu(c('Warsaw', 'Barcelona'), totalDistance)
View(cities)
permu(c('Warsaw', 'Warsaw'), totalDistance)
permu(c('Warsaw', 'London'), totalDistance)
permu(c('Warsaw', 'Paris'), totalDistance)
permu(c('Warsaw', 'Warsaw'), totalDistance)
View(permu)
bestResult
bestResult <- 99999
permu(c('Warsaw', 'Paris'), totalDistance)
bestResult
permu(c('Warsaw', 'Paris', 'London', 'Rome'), totalDistance)
bestResult <- 99999
permu(c('Warsaw', 'Paris', 'London', 'Rome'), totalDistance)
permu(c('Warsaw', 'Paris', 'London', 'Rome'), totalDistance)
cites.names
cites.list <- c()
for(i in cites.names){
cites.list <- c(cites.list, i)
}
cites.list
permu(cites.list, totalDistance)
c('Barcelona','Belgrade','Berlin','Brussels','Bucharest','Budapest','Copenhagen','Dublin','Hamburg','Istanbul','Kiev','London','Madrid','Milan','Moscow','Munich','Paris','Prague','Rome','Saint.Petersburg','Sofia','Stockholm','Vienna','Warsaw')
cites.list< -c('Barcelona','Belgrade','Berlin','Brussels','Bucharest','Budapest','Copenhagen','Dublin','Hamburg','Istanbul','Kiev','London','Madrid','Milan','Moscow','Munich','Paris','Prague','Rome','Saint.Petersburg','Sofia','Stockholm','Vienna','Warsaw')
cites.list<-c('Barcelona','Belgrade','Berlin','Brussels','Bucharest','Budapest','Copenhagen','Dublin','Hamburg','Istanbul','Kiev','London','Madrid','Milan','Moscow','Munich','Paris','Prague','Rome','Saint.Petersburg','Sofia','Stockholm','Vienna','Warsaw')
permu(cites.list, totalDistance)
cites.list<-c('Belgrade','Berlin','Brussels','Bucharest','Budapest','Copenhagen','Dublin','Hamburg','Istanbul','Kiev','London','Madrid','Milan','Moscow','Munich','Paris','Prague','Rome','Saint.Petersburg','Sofia','Stockholm','Vienna','Warsaw')
permu(cites.list, totalDistance)
permu(c('Belgrade','Berlin','Brussels','Bucharest','Budapest','Copenhagen','Dublin','Hamburg','Istanbul','Kiev','London','Madrid','Milan','Moscow','Munich','Paris','Prague','Rome','Saint.Petersburg','Sofia','Stockholm','Vienna','Warsaw'), totalDistance)
permu(c(c('Belgrade','Berlin','Brussels','Bucharest','Budapest','Copenhagen','Dublin','Hamburg','Istanbul','Kiev','London'), totalDistance)
;
permu(c('Belgrade','Berlin','Brussels','Bucharest','Budapest','Copenhagen','Dublin','Hamburg','Istanbul','Kiev','London'), totalDistance)
permu(c('Belgrade','Berlin','Brussels','Bucharest','Budapest'), totalDistance)
cites.list
bestResult <- 99999
permu(c('Belgrade','Berlin','Brussels','Bucharest','Budapest','Copenhagen'), totalDistance)
permu <- function(perm, fun, current=NULL){
for(i in 1: length(perm)){
fix <- c(current, perm[i]) # calculated elements; fix at this point
print(fix)
rest <- perm[-i] # elements yet to permutate
#Call callback.
if(!length(rest)){
result <- fun(fix)
if(result<bestResult){
assign("bestResult", result, envir = .GlobalEnv)
print(bestResult)
}
}
if(length(rest)){
result <- permu(rest, fun, fix)
}
}
}
bestResult <- 99999
permu(c('Belgrade','Berlin','Brussels','Bucharest','Budapest','Copenhagen'), totalDistance)
permu(c('Belgrade','Berlin','Brussels','Bucharest','Budapest','Copenhagen','Dublin','Hamburg','Istanbul','Kiev','London'), totalDistance)
permu <- function(perm, fun, current=NULL){
for(i in 1: length(perm)){
fix <- c(current, perm[i]) # calculated elements; fix at this point
rest <- perm[-i] # elements yet to permutate
#Call callback.
if(!length(rest)){
result <- fun(fix)
if(result<bestResult){
assign("bestResult", result, envir = .GlobalEnv)
print(bestResult)
}
}
if(length(rest)){
result <- permu(rest, fun, fix)
}
}
}
permu(c('Belgrade','Berlin','Brussels','Bucharest','Budapest','Copenhagen','Dublin'), totalDistance)
bestResult <- 99999
permu(c('Belgrade','Berlin','Brussels','Bucharest','Budapest','Copenhagen','Dublin'), totalDistance)
permu(c('Belgrade','Berlin','Brussels','Bucharest','Budapest','Copenhagen','Dublin', 'Hamburg','Istanbul','Kiev','London','Madrid','Milan',), totalDistance)
permu(c('Belgrade','Berlin','Brussels','Bucharest','Budapest','Copenhagen','Dublin', 'Hamburg','Istanbul','Kiev','London','Madrid','Milan'), totalDistance)
?factorial
install.packages("GA")
knitr::opts_chunk$set(cache=TRUE, echo = TRUE)
library(GA)
citation("GA")
costFunction <-function(cfVisitedCities, ...){
-(totalDistance(cfVisitedCities,...))
}
